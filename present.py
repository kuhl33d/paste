#!/usr/bin/python3
import os
import sys
import time
# ts = os.get_terminal_size()
# ts.lines
# ts.columns
frame_rate = 0.1
txt


def anim1():
  try:
    i = 0
    msg = "\033c"
    ts = os.get_terminal_size()
    while i < len(txt[0])-ts.columns:
      ts = os.get_terminal_size()
      for d in range( len(txt) ):
        tmp = ''.join(txt[d])
        msg += tmp[i:i+ts.columns]
        msg += "\n"
      sys.stdout.write(msg)
      msg = "\033c"
      i += 1
      time.sleep(frame_rate)
    sys.stdout.flush()
    return 0
  except KeyboardInterrupt:
    sys.stdout.write("\033cexitting")
    sys.stdout.flush()
    return -1 


while True:
  try:
    sys.stdout.write("select number\n1 -> first animation\n2 -> clear\n3 -> exit\n")
    sel = int(input("selected number: "))
    sys.stdout.flush()
    if sel == 1:
      t = anim1()
      sys.stdout.write("\nkuhl33d :) @ Fri Jan  1 2021\n")
      sys.stdout.flush()
      time.sleep(1)
      if t == -1:
        raise KeyboardInterrupt
    elif sel == 2:
        sys.stdout.write("\033c")
        sys.stdout.flush()
    elif sel == 3:
      print("exitting...")
      break
    else:
      pass
  except KeyboardInterrupt:
    sys.stdout.write("\033c\nexitting  bye..\n")
    sys.stdout.flush()
    break
  except:
    sel = 3
